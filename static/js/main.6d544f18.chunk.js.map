{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","value","onChange","target","placeholder","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","taskFromServer","getTask","fetchTask","fetch","res","json","addTask","method","headers","body","JSON","stringify","data","deleteTask","filter","taskToggled","updatedTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d544f18.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({text, color, onClick}) => {\r\n    return <button\r\n        onClick={onClick}\r\n        style={{backgroundColor: color}}\r\n        className={'btn'}>{text}</button>\r\n};\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className={'header'}>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'}\r\n                    text={showAdd ? 'Cancel' : 'Add Task'}\r\n                    onClick={onAdd}/>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.defaultProps =\r\n    {\r\n        title: 'React Task Manager'\r\n    }\r\n\r\nHeader.propTypes =\r\n    {\r\n        title: PropTypes.string.isRequired,\r\n    }\r\n\r\n// css in js\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     background: 'black'\r\n// }\r\nexport default Header;","import React from 'react';\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tasks;","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\nconst [text, setText] = useState('');\r\nconst [day, setDay] = useState('');\r\nconst [reminder, setReminder] = useState(false);\r\n\r\nconst onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n        alert('Please add a task')\r\n        return\r\n    }\r\n    onAdd({text, day, reminder})\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n}\r\n    return (\r\n        <form className={'add-form'} onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"task\">Task</label>\r\n                <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder={'Add task'}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"day\">Day</label>\r\n                <input type=\"text\" value={day} onChange={e => setDay(e.target.value)} placeholder={'Add day and time'}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label htmlFor=\"task\">Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={e => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" value={'Save Task'} className={'btn btn-block'}/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;","import {useEffect, useState} from 'react'\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n    const [showAddTask, setShowAddTask] = useState(false);\n\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n        const getTask = async () => {\n            const taskFromServer = await fetchTasks()\n            setTasks(taskFromServer)\n        }\n        getTask()\n    }, [])\n    // Fetch task\n    const fetchTask = async (id) => {\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\n        return await res.json()\n    }\n    const fetchTasks = async () => {\n        const res = await fetch('http://localhost:5000/tasks')\n        return await res.json()\n    }\n    // Add task\n    const addTask = async (task) => {\n        const res = await fetch('http://localhost:5000/tasks', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n\n        const data = await res.json()\n        setTasks([...tasks, data])\n        // const id = Math.floor(Math.random() * 10000) + 1\n        // const newTask = {id, ...task};\n        // setTasks([...tasks, newTask])\n    }\n\n    // Delete Task\n    const deleteTask = async id => {\n        await fetch(`http://localhost:5000/tasks/${id}`, {\n            method: 'DELETE'\n        })\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    // Toggle reminder\n    const reminder = async id => {\n        const taskToggled = await fetchTask(id)\n        const updatedTask = {...taskToggled, reminder: !taskToggled.reminder}\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedTask)\n        })\n        const data = await res.json();\n        setTasks(tasks.map(task => task.id === id ? {...task, reminder: data.reminder} : task))\n    }\n    return (\n        <div className=\"container\">\n            <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n            {showAddTask && <AddTask onAdd={addTask}/>}\n            {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={reminder}/> : 'No Tasks Do'}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}